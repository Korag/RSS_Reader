
@{
    ViewBag.Title = "Index";
}
@section scripts
    {

    <script>
          Vue.component('emailbar', {
          })
          Vue.component('contentlist', {
            props: ['item'],
              template:`
                  <div>
                      <div class="row">
                              <img class="col-4 img-responsive" width="200" height="200" :src="item.image">
                          <div class="col-8 content">
                              <div class="row">
                                  <p class="dateText col-6"> {{ item.date }}</p>
                                  <p class="categoryText col-6"><span class="bordercat">{{ item.category }}</span></p>
                              </div>
                              <a class="header row">{{ item.title }}</a>
                              <div class="descriptionText row" v-if="item.flag == 'Text'">{{ item.description }}
                              </div>
                              <div class="audiopos row" v-if="item.flag == 'Podcast'">
                                  <audio controls>
                                      <source :src="item.mp3" type="audio/mpeg">
                                  </audio>
                              </div>
                          </div>
                      </div>
                  </div>`

                    ,

          })
          Vue.component('categorylist', {
            props: ['category'],
              template: `<div class="row">
                                <label class="col-10" v-on:click="$emit('by-category', category)">{{category}}</label>
						        <input class="col-2" type="checkbox" v-on:click="$emit('change', category)">
                        </div>`
        })

        class RssNews {
            constructor(title, category, image, description, date, link, flag) {
                this.title = title;
                this.category = category;
                this.image = image;
                this.description = description.replace(/&quot;/g, '"');
                this.date = date;
                this.link = link;
                this.flag = flag
            }
        }
        class RssPodcast {
            constructor(title, category, image, date, mp3, link, flag) {
                this.title = title;
                this.category = category;
                this.image = image;
                this.date = date;
                this.mp3 = mp3;
                this.link = link;
                this.flag = flag
            }
        }
        var app = new Vue({
            el: '#app',
            data: {
                search: '',
                mail: '',
                apiResponse: [],
                newsList: [],
                categoryList: [],
                filteredList: [],
                filterByCategoryList: [],
                subscribeCategoryList: []
            },
            methods: {
                GetNews: function () {
                    this.$http.get('http://localhost:59554/api/RssDocument')
                        .then(response => {
                            this.apiResponse = response.data;
                            this.GetListOfNews(this.apiResponse);
                            this.GetListOfCatergory(this.apiResponse);
                        });
                },
                GetListOfNews: function (apiResponse) {
                    for (let i = 0; i < apiResponse.length; i++) {
                        for (let j = 0; j < apiResponse[i].RssDocumentContent.length; j++) {
                            if (apiResponse[i].Flag == "Text") {
                                this.newsList.push(new RssNews(apiResponse[i].RssDocumentContent[j].Title.replace(/<[^>]+>/g, ''), apiResponse[i].Title, apiResponse[i].RssDocumentContent[j].Image,
                                    apiResponse[i].RssDocumentContent[j].Description.replace(/<[^>]+>/g, ''), apiResponse[i].RssDocumentContent[j].DateOfPublication,
                                    apiResponse[i].RssDocumentContent[j].Links, apiResponse[i].Flag))
                            }
                            else {
                                this.newsList.push(new RssPodcast(apiResponse[i].RssDocumentContent[j].Title.replace(/<[^>]+>/g, ''), apiResponse[i].Title, apiResponse[i].Image,
                                    apiResponse[i].RssDocumentContent[j].DateOfPublication, apiResponse[i].RssDocumentContent[j].Image,
                                    apiResponse[i].RssDocumentContent[j].Links, apiResponse[i].Flag))
                            }
                        }
                    }
                },
                GetListOfCatergory: function (apiResponse) {
                    for (let i = 0; i < apiResponse.length; i++) {
                        this.categoryList.push(apiResponse[i].Title);
                    }
                },
                FilteredList: function () {
                    this.filteredList = this.newsList.filter(news => {
                        return news.title.toLowerCase().includes(this.search.toLowerCase())
                    })
                },
                CategoryShowCheck: function () {
                    this.filteredList = this.newsList.filter(news => {
                        for (var x in this.filterByCategoryList) {
                            if (news.category.toLowerCase() === this.filterByCategoryList[x].toLowerCase()) {
                                return true
                            }
                        }
                        return false
                    })
                    if (this.filteredList.length == 0) {
                        this.filteredList = this.newsList
                    }
                },
                CompareStrings: function (array,category) {
                    for (var string in array) {
                        if (array[string] === category) {
                            return true
                        }
                    }
                    return false
                },
                FilterByCategory: function (category) {
                    if (this.CompareStrings(this.filterByCategoryList,category)) {
                        this.filterByCategoryList.splice(this.filterByCategoryList.findIndex(filter => {
                            return filter === category
                        }), 1);
                        this.CategoryShowCheck();
                    }
                    else {
                        this.filterByCategoryList.push(category);
                        this.CategoryShowCheck();
                    }
                },
                RefreshSubscribeCategoryList: function (category) {
                    if (this.CompareStrings(category)) {
                       (this.subscribeCategoryList.findIndex(filter => {
                            return filter == category
                        }))
                        this.subscribeCategoryList.splice(this.subscribeCategoryList.findIndex(filter => {
                            return filter === category
                        }), 1);
                    }
                    else {
                        this.subscribeCategoryList.push(category);
                    }
                },
                SubscribeByMail: function () {
                    var formData = new FormData();
                    formData.append("EmailAddress", this.mail);
                    for (var category in this.subscribeCategoryList) {
                        formData.append("SubscriberList", category);
                    }
                    this.$http.post('http://localhost:59554/Reader/SubscribeNewsletter', formData).then(response => { console.log(response.statusText) })
                }

            },
            created: function () {
                this.GetNews();
                this.filteredList = this.newsList;
            }
            })
    </script>
}


<script type="text/javascript">
<!--
    function toggle_visibility(id) {
        var e = document.getElementById(id);
        if (e.style.display == 'block')
            e.style.display = 'none';
        else
            e.style.display = 'block';
    }
</script>

<div id="app" class="container-fluid">
    <div class="row">

        <div class="card-body row align-items-center d-flex justify-content-center">
            <div>
                <i class="fas fa-search h4 text-body mr-1"></i>
            </div>
            <div>
                <input class="form-control form-control-lg border-success" v-model="search" type="search" placeholder="Wyszukaj kanał RSS">
            </div>
            <div>
                <button class="btn btn-lg btn-outline-success ml-1" v-on:click="FilteredList" type="submit">Szukaj</button>
            </div>
        </div>    
    </div>
    <div class="row">
        <div class="col-2 ">
            <a href="#" onclick="toggle_visibility('visibility');"><i class="fa fa-folder-open"></i>Pokaż Kategorie</a>
            <div class="display" id="visibility">
                <categorylist v-for="category in categoryList"
                              v-bind:key="category.Name"
                              v-bind:category="category"
                              v-on:by-category="FilterByCategory"
                              v-on:change="RefreshSubscribeCategoryList">

                </categorylist>
                    <div class="card-body row align-items-center d-flex justify-content-center">
                        <input class="form-control border-success" v-model="mail" placeholder="Wprowadź swój e-mail">
                        <button class="btn btn-outline-success mt-1" v-on:click="SubscribeByMail">Subskrybuj</button>
                    </div>
            </div>
        </div>

        <div class="col-8">
            <div class=" force-overflow scrollbar" id="style-6">
                <contentlist class="col"
                             v-for="obj in filteredList"
                             v-bind:item="obj"
                             v-bind:key="obj.$id">

                </contentlist>
            </div>
        </div>

    </div>
</div>